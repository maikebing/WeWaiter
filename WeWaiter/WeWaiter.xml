<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WeWaiter</name>
    </assembly>
    <members>
        <member name="M:WeWaiter.Controllers.OrdersController.GetDetails(System.String)">
            <summary>
            返回订单的详细信息
            </summary>
            <param name="id">订单ID 0308c5a6-cbfe-49c7-92a0-c404342f480b</param>
            <returns>订单详细信息</returns>
        </member>
        <member name="M:WeWaiter.Controllers.OrdersController.GetOrders">
            <summary>
            当前登录用户的所有订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.OrdersController.CreateOrder(WeWaiter.Data.NewOrder)">
            <summary>
            提交订单信息 { "buyItems": [ { "Total": 2, "goodsID": "c805253d14fd4f62a28deb118c3759da" } ],"sellerID": "342c501a-3365-4c2f-816f-2aaf51ea7a39","SeatNumber":1}
            </summary>
            <param name="order">订单详情</param>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.SellersController.GetSeller(System.String,System.Int32)">
            <summary>
            获取商家信息
            </summary>
            <param name="id">商家编码</param>
            <param name="seatid">座位编码，如果没有座位，则座位信息为空</param>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.TenPayV3Controller.PayNotifyUrl(System.String)">
            <summary>
            JS-SDK支付回调地址（在统一下单接口中设置notify_url）
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.TenPayV3Controller.PayNotifyUrlWxOpen">
            <summary>
            小程序微信支付回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.TenPayV3Controller.Query(System.String)">
            <summary>
            订单查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.TenPayV3Controller.Close(System.String)">
            <summary>
            关闭订单接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.WeiXinAppController.Get(Senparc.Weixin.WxOpen.Entities.Request.PostModel,System.String)">
            <summary>
            GET请求用于处理微信小程序后台的URL验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.WeiXinAppController.Login(WeWaiter.Models.LoginModel)">
            <summary>
            wx.login登陆成功之后发送的请求
            </summary>
            <param name="loginMode"></param>
            <returns></returns>
        </member>
        <member name="M:WeWaiter.Controllers.WeiXinController.Get(Senparc.Weixin.MP.Entities.Request.PostModel,System.String)">
            <summary>
            微信后台验证地址（使用Get），微信后台的“接口配置信息”的Url填写如：http://sdk.weixin.senparc.com/weixin
            </summary>
        </member>
        <member name="T:WeWaiter.Data.TradeState">
            <summary>
              PAYERROR--支付失败(其他原因，如银行返回失败)
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.OrderIndex">
            <summary>
            当天票号
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.Create">
            <summary>
            下单时间
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.Payable">
            <summary>
            应付的
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.ActPay">
            <summary>
            实际支付金额 从微信来
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.TransactionId">
            <summary>
            微信交易代码
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.PayType">
            <summary>
            支付类型
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.TotalPrice">
            <summary>
            总价格
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.OrderStatus">
            <summary>
            支付状态， 默认为 0 未支付，  更新跟随微信状态更新
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.OpenID">
            <summary>
            微信支付人ID
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.PrepayId">
            <summary>
            预支付ID,用于查询订单支付状态
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Order.PayDateTime">
            <summary>
            从微信返回来的支付时间，但返回异常情况下为 回调时间
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Seat.SeatId">
            <summary>
            座位编码
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Seat.Seller">
            <summary>
            卖家编码
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Seat.Seats">
            <summary>
            座位人数
            </summary>
        </member>
        <member name="P:WeWaiter.Data.Seat.Sit">
            <summary>
            是否有人
            </summary>
        </member>
        <member name="P:WeWaiter.Utils.Server.WebRootPath">
            <summary>
            wwwroot文件夹目录（专供ASP.NET Core MVC使用）
            </summary>
        </member>
        <member name="M:WeWaiter.Utils.WeAppTokenValidata.ValidateToken(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters,Microsoft.IdentityModel.Tokens.SecurityToken@)">
            验证securityToken
        </member>
        <member name="T:WeWaiter.AddAuthTokenHeaderParameter">
            <summary>
            this class is for swagger to generate AuthToken Header filed on swagger UI
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.Download.Config.Versions">
            <summary>
            chm版
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.Download.Config.WebVersions">
            <summary>
            网页版
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.Download.ConfigHelper.GetConfig">
            <summary>
            获取配置文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.Download.ConfigHelper.GetQrCodeId">
            <summary>
            获取一个二维码场景标示（自增，唯一）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler">
            <summary>
            自定义MessageHandler
            </summary>
            <summary>
            自定义MessageHandler
            </summary>
            <summary>
            自定义MessageHandler
            把MessageHandler作为基类，重写对应请求的处理方法
            </summary>
            <summary>
            自定义MessageHandler
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_TemplateSendJobFinishRequestAsync(Senparc.Weixin.MP.Entities.RequestMessageEvent_TemplateSendJobFinish)">
            <summary>
            【异步方法】事件之发送模板消息返回结果
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="F:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.GenerateMessageHandler">
            <summary>
            为中间件提供生成当前类的委托
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.#ctor(System.IO.Stream,Senparc.Weixin.MP.Entities.Request.PostModel,System.Int32,System.Boolean,System.IServiceProvider)">
            <summary>
            自定义 MessageHandler
            </summary>
            <param name="inputStream"></param>
            <param name="postModel"></param>
            <param name="maxRecordCount"></param>
            <param name="onlyAllowEncryptMessage"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnTextRequestAsync(Senparc.Weixin.MP.Entities.RequestMessageText)">
            <summary>
            处理文字请求
            </summary>
            <param name="requestMessage">请求消息</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnLocationRequest(Senparc.Weixin.MP.Entities.RequestMessageLocation)">
            <summary>
            处理位置请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnImageRequest(Senparc.Weixin.MP.Entities.RequestMessageImage)">
            <summary>
            处理图片请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnVoiceRequest(Senparc.Weixin.MP.Entities.RequestMessageVoice)">
            <summary>
            处理语音请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnVideoRequestAsync(Senparc.Weixin.MP.Entities.RequestMessageVideo)">
            <summary>
            处理视频请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnLinkRequest(Senparc.Weixin.MP.Entities.RequestMessageLink)">
            <summary>
            处理链接消息请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEventRequestAsync(Senparc.Weixin.MP.Entities.IRequestMessageEventBase)">
            <summary>
            处理事件请求（这个方法一般不用重写，这里仅作为示例出现。除非需要在判断具体Event类型以外对Event信息进行统一操作
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_ClickRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Click)">
            <summary>
            点击事件
            </summary>
            <param name="requestMessage">请求消息</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_EnterRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Enter)">
            <summary>
            进入事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_LocationRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Location)">
            <summary>
            位置事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_ScanRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scan)">
            <summary>
            通过二维码扫描关注扫描事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_ViewRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_View)">
            <summary>
            打开网页事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_MassSendJobFinishRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_MassSendJobFinish)">
            <summary>
            群发完成事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_SubscribeRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Subscribe)">
            <summary>
            订阅（关注）事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_UnsubscribeRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Unsubscribe)">
            <summary>
            退订
            实际上用户无法收到非订阅账号的消息，所以这里可以随便写。
            unsubscribe事件的意义在于及时删除网站应用中已经记录的OpenID绑定，消除冗余数据。并且关注用户流失的情况。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_ScancodePushRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scancode_Push)">
            <summary>
            事件之扫码推事件(scancode_push)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_ScancodeWaitmsgRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scancode_Waitmsg)">
            <summary>
            事件之扫码推事件且弹出“消息接收中”提示框(scancode_waitmsg)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_PicPhotoOrAlbumRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Photo_Or_Album)">
            <summary>
            事件之弹出拍照或者相册发图（pic_photo_or_album）
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_PicSysphotoRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Sysphoto)">
            <summary>
            事件之弹出系统拍照发图(pic_sysphoto)
            实际测试时发现微信并没有推送RequestMessageEvent_Pic_Sysphoto消息，只能接收到用户在微信中发送的图片消息。
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_PicWeixinRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Weixin)">
            <summary>
            事件之弹出微信相册发图器(pic_weixin)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageHandler.OnEvent_LocationSelectRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Location_Select)">
            <summary>
            事件之弹出地理位置选择器（location_select）
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.CustomMessageHandler.CustomMessageContext.CustomMessageContext_MessageContextRemoved(System.Object,Senparc.NeuChar.Context.WeixinContextRemovedEventArgs{Senparc.NeuChar.Entities.IRequestMessageBase,Senparc.NeuChar.Entities.IResponseMessageBase})">
            <summary>
            当上下文过期，被移除时触发的时间
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.WxOpenMessageHandler.CustomWxOpenMessageContext.CustomMessageContext_MessageContextRemoved(System.Object,Senparc.NeuChar.Context.WeixinContextRemovedEventArgs{Senparc.NeuChar.Entities.IRequestMessageBase,Senparc.NeuChar.Entities.IResponseMessageBase})">
            <summary>
            当上下文过期，被移除时触发的时间
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Senparc.Weixin.Sample.CommonService.WxOpenMessageHandler.CustomWxOpenMessageHandler">
            <summary>
            自定义MessageHandler
            把MessageHandler作为基类，重写对应请求的处理方法
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Sample.CommonService.WxOpenMessageHandler.CustomWxOpenMessageHandler.GenerateMessageHandler">
            <summary>
            为中间件提供生成当前类的委托
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.WxOpenMessageHandler.CustomWxOpenMessageHandler.OnTextRequestAsync(Senparc.Weixin.WxOpen.Entities.RequestMessageText)">
            <summary>
            处理文字请求
            </summary>
            <returns></returns>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_ExceptionAlert.keyword1">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_ExceptionAlert.keyword2">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_ExceptionAlert.keyword3">
            <summary>
            Service
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_ExceptionAlert.keyword4">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_ExceptionAlert.keyword5">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_PaySuccess">
            <summary>
            支付成功模板消息（购买成功通知）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Sample.CommonService.TemplateMessage.WeixinTemplate_PaySuccess.remark">
            <summary>
            Time
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Sample.CommonService.TemplateMessage.WxOpen.WxOpenTemplateMessage_PaySuccessNotice.#ctor(System.String,System.DateTimeOffset,System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            “购买成功通知”模板消息数据
            </summary>
            <param name="payAddress">购买地点</param>
            <param name="payTime">购买时间</param>
            <param name="productName">物品名称</param>
            <param name="orderNumber">交易单号</param>
            <param name="orderPrice">购买价格</param>
            <param name="hotLine">售后电话</param>
            <param name="url"></param>
            <param name="templateId"></param>
        </member>
    </members>
</doc>
